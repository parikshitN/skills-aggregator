type Skill {
  uuid: ID!
  name: String!
  domain: String!
}

input SkillInput {
  name: String!
  domain: String!
}

type Mutation {
  createSkill(input: SkillInput!): Skill
  updateExpertise(input: UserExpertiseInput!): UserExpertise
  updateSkill(input: UpdateSkillInput!): Skill
  deleteSkill(input: ID!): DeleteResponse!
}

type Query {
  getAllSkills: [Skill!]!
  getSkill(input: ID!): Skill!
  getUser(input: ID!): User
}

schema {
  mutation: Mutation
  query: Query
}

type UserExpertise {
  userId: ID!
  expertise: [Expertise!]!
}

type Expertise {
  skillId: ID!
  level: String!
  experience: Int!
}

input UserExpertiseInput {
  userId: ID!
  expertise: [ExpertiseInput!]!
}

input ExpertiseInput {
  skillId: ID!
  level: String!
  experience: Int!
}

input UpdateSkillInput {
  uuid: ID!
  name: String!
  domain: String!
}

type DeleteResponse {
  message: String!
}

type User {
  userId: ID!
  firstName: String!
  lastName: String!
  email: String!
  expertise: [Expertise!]!
}
